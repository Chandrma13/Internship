import java.util.*;
class Solution {
    public  int[][] construct2DArray(int[] original, int m, int n) {
        // If the size of the original array is not equal to m x n, return an empty 2D array
        if (original.length != m * n) {
            return new int[][]{};
        }

        // Create a new 2D array with dimensions m x n
        int[][] ans = new int[m][n];

        // Fill in the 2D array row by row, column by column
        for (int i = 0; i < original.length; i++) {
            // Calculate the row index of the current element
            int row = i / n;
            // Calculate the column index of the current element
            int col = i % n;
            // Insert the current element from the original array into the correct position in the 2D array
            ans[row][col] = original[i];
        }

        // Return the resulting 2D array
        return ans;
    }

    public static void main(String[] args) {
        //Initialise variables and call the function
        int[] original = {1, 2, 3, 4};
        int m = 2;
        int n = 2;

       Solution s = new Solution();
        int[][] result = s.construct2DArray(original, m, n);

        // Print the resulting 2D array
        System.out.println(Arrays.deepToString(result));
    }
}
