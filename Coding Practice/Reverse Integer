public class Sol{
    public int reverse(int x) {
        int rev = 0; //initialise an integer rev to store the reversed integer 
        while (x != 0) {
            int digit = x % 10; //initialise an integer variable digit to store the last digits or remainders of the original number
            // check if adding the next digit will cause overflow(condition given in the question)
            if (rev > Integer.MAX_VALUE / 10 || (rev == Integer.MAX_VALUE / 10 && digit > 7)) {
                return 0;
            }
            if (rev < Integer.MIN_VALUE / 10 || (rev == Integer.MIN_VALUE / 10 && digit < -8)) {
                return 0;
            }
            rev = (rev * 10) + digit; //now multiply the updated value of rev by 10 & add the remaining digits to it
            x /= 10; //remove the digits from the end of the original number that has already been added to the reversed number
        }
        return rev; //return the updated value of reversed number
    }
    public static void main(String[] args) {
        //initialise and print the updated reversed number
        Sol s = new Sol();
        int x = 12345;
        int reversed = s.reverse(x);
        System.out.println(reversed);
    }
    
    
}
