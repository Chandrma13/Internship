import java.util.Arrays;
class Solution {
    public static long[] productExceptSelf(int[] nums, int n) {
        long[] result = new long[n];//Initialise a long array to store the product array
        
        // Create left and right product arrays
        long[] leftProducts = new long[n];
        long[] rightProducts = new long[n];
        
        leftProducts[0] = 1; //set the first element of leftProduct Array as 1
        rightProducts[n - 1] = 1; //set the last element of rightProduct Array as 1
        
        // Calculate left products
        for (int i = 1; i < n; i++) {
            leftProducts[i] = leftProducts[i - 1] * nums[i - 1];
        }
        
        // Calculate right products
        for (int i = n - 2; i >= 0; i--) {
            rightProducts[i] = rightProducts[i + 1] * nums[i + 1];
        }
        
        // Calculate the product array
        for (int i = 0; i < n; i++) {
            result[i] = leftProducts[i] * rightProducts[i];
        }
        
        return result;//return the result product array
    }
    public static void main(String[] args) {
        //Initialise nums array and n
        int n = 5;
        int[] nums = {10, 3, 5, 6, 2};
        //Call the function and print
        long[] result = productExceptSelf(nums, n);
        System.out.println(Arrays.toString(result));
    }
}
