class Solution {
    // Function to find the maximum money the thief can get.
    public int FindMaxSum(int arr[], int n) {
        // If there are no houses or only one house, return the money in that house.
        if (n <= 0) {
            return 0;
        } else if (n == 1) {
            return arr[0];
        }

        // Create an array to store the maximum money that can be robbed up to the ith house.
        int[] dp = new int[n];
        dp[0] = arr[0];
        dp[1] = Math.max(arr[0], arr[1]);

        // Compute the maximum money that can be robbed up to each house.
        for (int i = 2; i < n; i++) {
            dp[i] = Math.max(dp[i - 1], dp[i - 2] + arr[i]);
        }

        // Return the maximum money that can be robbed from all houses.
        return dp[n - 1];
    }
    public static void main(String[] args) {
    //Initialise a[] & n
    int a[] = {5,5,10,100,10,5}; 
    int n = a.length;
    //Call the function & Print
    Solution s = new Solution();
    System.out.println(s.FindMaxSum(a, n));
    }
}
