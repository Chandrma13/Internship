// Define a Node class for a singly linked list
class Node {
    int data;       // Data stored in the node
    Node next;      // Reference to the next node

    // Constructor to initialize a node with data and set the next pointer to null
    Node(int d) {
        data = d;
        next = null;
    }
}

// Define a class GfG (short for GeeksforGeeks)
class GfG {
    // Function to delete a node at position x from the linked list
    Node deleteNode(Node head, int x) {
        // Check if the position to delete is the first node (position 1)
        if (x == 1) {
            // Return the next node as the new head, effectively removing the first node
            return head.next;
        }

        int count = 2;      // Initialize a count variable to 2 (we've already handled position 1)

        Node temp = head;   // Create a temporary pointer and initialize it with the head

        // Traverse the linked list using a while loop
        while (temp.next != null) {
            // Check if the current position (count) is equal to the target position (x)
            if (x == count) {
                // Update the next pointer of the previous node to skip the current node,
                // effectively removing it from the linked list
                temp.next = temp.next.next;
                // Return the original head (the linked list may or may not have changed)
                return head;
            }

            temp = temp.next;  // Move the temporary pointer to the next node
            count++;           // Increment the count to keep track of the position
        }

        // If the target position (x) is not found, return the original head (no change)
        return head;
    }
public static void main(String[] args) {
        // Create a sample linked list: 1 -> 3 -> 4
        Node head = new Node(1);
        head.next = new Node(3);
        head.next.next = new Node(4);

        // Print the original linked list
        System.out.println("Original Linked List:");
        printLinkedList(head);

        int x = 3;  // Position of the node to delete

        // Create an instance of the GfG class to use the deleteNode function
        GfG gfg = new GfG();

        // Call the deleteNode function to delete the node at position x
        head = gfg.deleteNode(head, x);

        // Print the modified linked list after deletion
        System.out.println("Linked List after deleting node at position " + x + ":");
        printLinkedList(head);
    }

    // Helper function to print the linked list
    static void printLinkedList(Node head) {
        Node current = head;
        while (current != null) {
            System.out.print(current.data + " -> ");
            current = current.next;
        }
        System.out.println("null");
    }
}
