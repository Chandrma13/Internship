import java.util.Arrays;

class Solution {
    public int findLHS(int[] nums) {
        // Sort the input array in ascending order
        Arrays.sort(nums);
       // Initialize left and right pointers, and maximum length
        int l = 0;
        int r = 1;
        int max = 0;
     // Iterate until the right pointer reaches the end of the array
        while(r < nums.length){
            // Move the left pointer until the difference between nums[r] and nums[l] is greater than 1
            while(nums[r] - nums[l] > 1){
                l++;
            }
        // If the difference is exactly 1, update the maximum length if necessary
            if(nums[r] - nums[l] == 1){
                max = Math.max(max, (r - l) + 1);
            }
        // Increment the right pointer
            r++;
        }
    // Return the maximum length
        return max;
    }
    public static void main(String[] args) {
        //Initialise array nums and call the function
        int[] nums = {1,3,2,2,5,2,3,7};
        Solution s = new Solution();
        System.out.println(s.findLHS(nums));
    }
}
